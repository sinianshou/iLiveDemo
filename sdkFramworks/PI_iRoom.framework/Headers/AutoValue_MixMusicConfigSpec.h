//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:libs/XiRoom-sources.jar!com/powerinfo/pi_iroom/data/AutoValue_MixMusicConfigSpec.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AutoValue_MixMusicConfigSpec")
#ifdef RESTRICT_AutoValue_MixMusicConfigSpec
#define INCLUDE_ALL_AutoValue_MixMusicConfigSpec 0
#else
#define INCLUDE_ALL_AutoValue_MixMusicConfigSpec 1
#endif
#undef RESTRICT_AutoValue_MixMusicConfigSpec

#if !defined (PIAutoValue_MixMusicConfigSpec_) && (INCLUDE_ALL_AutoValue_MixMusicConfigSpec || defined(INCLUDE_PIAutoValue_MixMusicConfigSpec))
#define PIAutoValue_MixMusicConfigSpec_

#define RESTRICT_$AutoValue_MixMusicConfigSpec 1
#define INCLUDE_PI_AutoValue_MixMusicConfigSpec 1
#include "$AutoValue_MixMusicConfigSpec.h"

@interface PIAutoValue_MixMusicConfigSpec : PI_AutoValue_MixMusicConfigSpec

#pragma mark Package-Private

- (instancetype)initWithInt:(jint)ssrc
                   withLong:(jlong)pzvt
                    withInt:(jint)volume
                withBoolean:(jboolean)streaming
                withBoolean:(jboolean)remix
                withBoolean:(jboolean)music_sync_fix
               withNSString:(NSString *)source;

@end

J2OBJC_EMPTY_STATIC_INIT(PIAutoValue_MixMusicConfigSpec)

FOUNDATION_EXPORT void PIAutoValue_MixMusicConfigSpec_initWithInt_withLong_withInt_withBoolean_withBoolean_withBoolean_withNSString_(PIAutoValue_MixMusicConfigSpec *self, jint ssrc, jlong pzvt, jint volume, jboolean streaming, jboolean remix, jboolean music_sync_fix, NSString *source);

FOUNDATION_EXPORT PIAutoValue_MixMusicConfigSpec *new_PIAutoValue_MixMusicConfigSpec_initWithInt_withLong_withInt_withBoolean_withBoolean_withBoolean_withNSString_(jint ssrc, jlong pzvt, jint volume, jboolean streaming, jboolean remix, jboolean music_sync_fix, NSString *source) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT PIAutoValue_MixMusicConfigSpec *create_PIAutoValue_MixMusicConfigSpec_initWithInt_withLong_withInt_withBoolean_withBoolean_withBoolean_withNSString_(jint ssrc, jlong pzvt, jint volume, jboolean streaming, jboolean remix, jboolean music_sync_fix, NSString *source);

J2OBJC_TYPE_LITERAL_HEADER(PIAutoValue_MixMusicConfigSpec)

@compatibility_alias ComPowerinfoPi_iroomDataAutoValue_MixMusicConfigSpec PIAutoValue_MixMusicConfigSpec;

#endif

#if !defined (PIAutoValue_MixMusicConfigSpec_GsonTypeAdapter_) && (INCLUDE_ALL_AutoValue_MixMusicConfigSpec || defined(INCLUDE_PIAutoValue_MixMusicConfigSpec_GsonTypeAdapter))
#define PIAutoValue_MixMusicConfigSpec_GsonTypeAdapter_

#define RESTRICT_TypeAdapter 1
#define INCLUDE_ComGoogleGsonTypeAdapter 1
#include "TypeAdapter.h"

@class ComGoogleGsonGson;
@class ComGoogleGsonJsonElement;
@class ComGoogleGsonStreamJsonReader;
@class ComGoogleGsonStreamJsonWriter;
@class JavaIoReader;
@class PIMixMusicConfigSpec;

@interface PIAutoValue_MixMusicConfigSpec_GsonTypeAdapter : ComGoogleGsonTypeAdapter

#pragma mark Public

- (instancetype)initWithComGoogleGsonGson:(ComGoogleGsonGson *)gson;

- (PIMixMusicConfigSpec *)fromJsonTreeWithComGoogleGsonJsonElement:(ComGoogleGsonJsonElement *)arg0;

- (PIMixMusicConfigSpec *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (PIMixMusicConfigSpec *)fromJsonWithNSString:(NSString *)arg0;

- (PIMixMusicConfigSpec *)readWithComGoogleGsonStreamJsonReader:(ComGoogleGsonStreamJsonReader *)jsonReader;

- (void)writeWithComGoogleGsonStreamJsonWriter:(ComGoogleGsonStreamJsonWriter *)jsonWriter
                                        withId:(PIMixMusicConfigSpec *)object;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(PIAutoValue_MixMusicConfigSpec_GsonTypeAdapter)

FOUNDATION_EXPORT void PIAutoValue_MixMusicConfigSpec_GsonTypeAdapter_initWithComGoogleGsonGson_(PIAutoValue_MixMusicConfigSpec_GsonTypeAdapter *self, ComGoogleGsonGson *gson);

FOUNDATION_EXPORT PIAutoValue_MixMusicConfigSpec_GsonTypeAdapter *new_PIAutoValue_MixMusicConfigSpec_GsonTypeAdapter_initWithComGoogleGsonGson_(ComGoogleGsonGson *gson) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT PIAutoValue_MixMusicConfigSpec_GsonTypeAdapter *create_PIAutoValue_MixMusicConfigSpec_GsonTypeAdapter_initWithComGoogleGsonGson_(ComGoogleGsonGson *gson);

J2OBJC_TYPE_LITERAL_HEADER(PIAutoValue_MixMusicConfigSpec_GsonTypeAdapter)

#endif

#pragma pop_macro("INCLUDE_ALL_AutoValue_MixMusicConfigSpec")
