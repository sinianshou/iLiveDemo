//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:libs/XiRoom-sources.jar!com/powerinfo/pi_iroom/data/LegacyCmdSpec.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_LegacyCmdSpec")
#ifdef RESTRICT_LegacyCmdSpec
#define INCLUDE_ALL_LegacyCmdSpec 0
#else
#define INCLUDE_ALL_LegacyCmdSpec 1
#endif
#undef RESTRICT_LegacyCmdSpec

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (PILegacyCmdSpec_) && (INCLUDE_ALL_LegacyCmdSpec || defined(INCLUDE_PILegacyCmdSpec))
#define PILegacyCmdSpec_

@class ComGoogleGsonGson;
@class ComGoogleGsonTypeAdapter;
@class IOSObjectArray;
@class JavaUtilArrayList;
@class PIJsonConverter;
@class PILegacyCmdSpec_Builder;
@class PIPushTargetConfigSpec;
@protocol JavaUtilList;

@interface PILegacyCmdSpec : NSObject

#pragma mark Public

- (instancetype)init;

- (jint)aggressive_a50_state;

- (jint)ax_mode;

+ (PILegacyCmdSpec_Builder *)builder;

- (NSString *)cdn_play_url;

+ (PILegacyCmdSpec *)changeViewerCmd;

+ (id<JavaUtilList>)createChangeA50StateCmdsWithNSString:(NSString *)roomId
                                                 withInt:(jint)a50State
                                                 withInt:(jint)selfVeA50State
                                     withPIJsonConverter:(PIJsonConverter *)jsonConverter;

+ (id<JavaUtilList>)createChangeAxModeCmdsWithNSString:(NSString *)roomId
                                               withInt:(jint)axMode
                                               withInt:(jint)selfVeAxMode
                                   withPIJsonConverter:(PIJsonConverter *)jsonConverter;

+ (id<JavaUtilList>)createChangeRoleCmdsWithJavaUtilList:(id<JavaUtilList>)roomIds
                                                 withInt:(jint)newRole
                                     withPIJsonConverter:(PIJsonConverter *)jsonConverter;

+ (PILegacyCmdSpec *)createJoinAsViewerCmdWithPlayStreamMode:(jint)playStreamMode;

+ (PILegacyCmdSpec *)createJoinCmdWithNSString:(NSString *)turnpUrl
                                  withNSString:(NSString *)cdnPlayUrl
                                   withBoolean:(jboolean)firstJoin
                                   withBoolean:(jboolean)setTurnP;

+ (id<JavaUtilList>)createJoinCmdsWithNSStringArray:(IOSObjectArray *)roomIds
                                            withInt:(jint)role
                                        withBoolean:(jboolean)forceAllocNew
                                withPIJsonConverter:(PIJsonConverter *)jsonConverter;

+ (PILegacyCmdSpec *)createLeaveCmd;

+ (id<JavaUtilList>)createLeaveCmdsWithNSStringArray:(IOSObjectArray *)roomIds
                                 withPIJsonConverter:(PIJsonConverter *)jsonConverter;

- (jboolean)force_start;

+ (PILegacyCmdSpec *)joiniRoomCmdWithInt:(jint)leaveOriginBehavior;

- (jint)leave_origin_behavior;

+ (PILegacyCmdSpec *)leaveiRoomCmdWithInt:(jint)reason;

- (jboolean)loopback;

- (NSString *)play_br_name;

- (jint)play_mode;

- (jint)play_stream_mode;

- (JavaUtilArrayList *)play_targets;

- (NSString *)play_ve_name;

- (jint)prefer_a50_state;

- (jint)prefer_ax_mode;

- (PIPushTargetConfigSpec *)push_config;

- (jint)push_mode;

- (JavaUtilArrayList *)push_targets;

- (NSString *)push_url_turnp;

- (jint)reason;

- (jint)room_size;

- (jint)scene_play_type;

- (jint)self_ve_a50_state;

- (jint)self_ve_ax_mode;

- (jint)targets_filter_mode;

- (NSString *)trans_seg_domain;

+ (jint)translateA50StateToAxModeWithInt:(jint)a50State;

+ (ComGoogleGsonTypeAdapter *)typeAdapterWithComGoogleGsonGson:(ComGoogleGsonGson *)gson;

@end

J2OBJC_EMPTY_STATIC_INIT(PILegacyCmdSpec)

FOUNDATION_EXPORT void PILegacyCmdSpec_init(PILegacyCmdSpec *self);

FOUNDATION_EXPORT ComGoogleGsonTypeAdapter *PILegacyCmdSpec_typeAdapterWithComGoogleGsonGson_(ComGoogleGsonGson *gson);

FOUNDATION_EXPORT PILegacyCmdSpec_Builder *PILegacyCmdSpec_builder(void);

FOUNDATION_EXPORT PILegacyCmdSpec *PILegacyCmdSpec_joiniRoomCmdWithInt_(jint leaveOriginBehavior);

FOUNDATION_EXPORT PILegacyCmdSpec *PILegacyCmdSpec_leaveiRoomCmdWithInt_(jint reason);

FOUNDATION_EXPORT PILegacyCmdSpec *PILegacyCmdSpec_changeViewerCmd(void);

FOUNDATION_EXPORT id<JavaUtilList> PILegacyCmdSpec_createLeaveCmdsWithNSStringArray_withPIJsonConverter_(IOSObjectArray *roomIds, PIJsonConverter *jsonConverter);

FOUNDATION_EXPORT id<JavaUtilList> PILegacyCmdSpec_createChangeRoleCmdsWithJavaUtilList_withInt_withPIJsonConverter_(id<JavaUtilList> roomIds, jint newRole, PIJsonConverter *jsonConverter);

FOUNDATION_EXPORT id<JavaUtilList> PILegacyCmdSpec_createChangeAxModeCmdsWithNSString_withInt_withInt_withPIJsonConverter_(NSString *roomId, jint axMode, jint selfVeAxMode, PIJsonConverter *jsonConverter);

FOUNDATION_EXPORT id<JavaUtilList> PILegacyCmdSpec_createChangeA50StateCmdsWithNSString_withInt_withInt_withPIJsonConverter_(NSString *roomId, jint a50State, jint selfVeA50State, PIJsonConverter *jsonConverter);

FOUNDATION_EXPORT id<JavaUtilList> PILegacyCmdSpec_createJoinCmdsWithNSStringArray_withInt_withBoolean_withPIJsonConverter_(IOSObjectArray *roomIds, jint role, jboolean forceAllocNew, PIJsonConverter *jsonConverter);

FOUNDATION_EXPORT jint PILegacyCmdSpec_translateA50StateToAxModeWithInt_(jint a50State);

FOUNDATION_EXPORT PILegacyCmdSpec *PILegacyCmdSpec_createJoinCmdWithNSString_withNSString_withBoolean_withBoolean_(NSString *turnpUrl, NSString *cdnPlayUrl, jboolean firstJoin, jboolean setTurnP);

FOUNDATION_EXPORT PILegacyCmdSpec *PILegacyCmdSpec_createJoinAsViewerCmdWithPlayStreamMode_(jint playStreamMode);

FOUNDATION_EXPORT PILegacyCmdSpec *PILegacyCmdSpec_createLeaveCmd(void);

J2OBJC_TYPE_LITERAL_HEADER(PILegacyCmdSpec)

@compatibility_alias ComPowerinfoPi_iroomDataLegacyCmdSpec PILegacyCmdSpec;

#endif

#if !defined (PILegacyCmdSpec_Builder_) && (INCLUDE_ALL_LegacyCmdSpec || defined(INCLUDE_PILegacyCmdSpec_Builder))
#define PILegacyCmdSpec_Builder_

@class JavaUtilArrayList;
@class PILegacyCmdSpec;
@class PIPushTargetConfigSpec;

@interface PILegacyCmdSpec_Builder : NSObject

#pragma mark Public

- (instancetype)init;

- (PILegacyCmdSpec_Builder *)aggressive_a50_stateWithInt:(jint)aggressive_a50_state;

- (PILegacyCmdSpec_Builder *)ax_mode:(jint)ax_mode;

- (PILegacyCmdSpec *)build;

- (PILegacyCmdSpec_Builder *)cdn_play_url:(NSString *)cdn_play_url;

- (PILegacyCmdSpec_Builder *)force_start:(jboolean)force_start;

- (PILegacyCmdSpec_Builder *)leave_origin_behavior:(jint)leave_origin_behavior;

- (PILegacyCmdSpec_Builder *)loopback:(jboolean)loopback;

- (PILegacyCmdSpec_Builder *)play_br_name:(NSString *)play_br_name;

- (PILegacyCmdSpec_Builder *)play_mode:(jint)play_mode;

- (PILegacyCmdSpec_Builder *)play_stream_mode:(jint)play_stream_mode;

- (PILegacyCmdSpec_Builder *)play_targets:(JavaUtilArrayList *)play_targets;

- (PILegacyCmdSpec_Builder *)play_ve_name:(NSString *)play_ve_name;

- (PILegacyCmdSpec_Builder *)prefer_a50_stateWithInt:(jint)prefer_a50_state;

- (PILegacyCmdSpec_Builder *)prefer_ax_mode:(jint)prefer_ax_mode;

- (PILegacyCmdSpec_Builder *)push_config:(PIPushTargetConfigSpec *)push_config;

- (PILegacyCmdSpec_Builder *)push_mode:(jint)push_mode;

- (PILegacyCmdSpec_Builder *)push_targets:(JavaUtilArrayList *)push_targets;

- (PILegacyCmdSpec_Builder *)push_url_turnp:(NSString *)push_url_turnp;

- (PILegacyCmdSpec_Builder *)reason:(jint)reason;

- (PILegacyCmdSpec_Builder *)room_size:(jint)room_size;

- (PILegacyCmdSpec_Builder *)scene_play_type:(jint)scene_play_type;

- (PILegacyCmdSpec_Builder *)self_ve_a50_stateWithInt:(jint)self_ve_a50_state;

- (PILegacyCmdSpec_Builder *)self_ve_ax_mode:(jint)self_ve_ax_mode;

- (PILegacyCmdSpec_Builder *)targets_filter_mode:(jint)targets_filter_mode;

- (PILegacyCmdSpec_Builder *)trans_seg_domain:(NSString *)trans_seg_domain;

#pragma mark Package-Private

- (PILegacyCmdSpec *)autoBuild;

- (jint)ax_mode;

- (jint)prefer_ax_mode;

- (jint)self_ve_ax_mode;

@end

J2OBJC_EMPTY_STATIC_INIT(PILegacyCmdSpec_Builder)

FOUNDATION_EXPORT void PILegacyCmdSpec_Builder_init(PILegacyCmdSpec_Builder *self);

J2OBJC_TYPE_LITERAL_HEADER(PILegacyCmdSpec_Builder)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_LegacyCmdSpec")
