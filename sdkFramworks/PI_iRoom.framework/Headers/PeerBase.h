//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:libs/XiRoom-sources.jar!com/powerinfo/pi_iroom/core/PeerBase.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_PeerBase")
#ifdef RESTRICT_PeerBase
#define INCLUDE_ALL_PeerBase 0
#else
#define INCLUDE_ALL_PeerBase 1
#endif
#undef RESTRICT_PeerBase

#if !defined (PIPeerBase_) && (INCLUDE_ALL_PeerBase || defined(INCLUDE_PIPeerBase))
#define PIPeerBase_

#define RESTRICT_Action0 1
#define INCLUDE_PIAction0 1
#include "Action0.h"

#define RESTRICT_Action1 1
#define INCLUDE_PIAction1 1
#include "Action1.h"

#define RESTRICT_IjkPlayerApi 1
#define INCLUDE_PIIjkPlayerCallback 1
#include "IjkPlayerApi.h"

@class IOSLongArray;
@class IOSObjectArray;
@class JavaLangInteger;
@class PIAudioDevice;
@class PIErrorReporter;
@class PIJsonConverter;
@class PIMetronomeChannelConfigSpec;
@class PIMixMusicConfigSpec;
@class PIPeerCore;
@class PIPeerExt;
@class PIPeerHook;
@class PIPeerPlayer;
@class PIPlayTargetSpec;
@class PIPushTargetConfigSpec;
@class PIRsCacheManager;
@class PIStatisticsInternal;
@class PIUiMemSafePeerCallback;
@protocol JavaLangRunnable;
@protocol JavaUtilList;
@protocol JavaUtilMap;
@protocol PIAecSwitch;
@protocol PIBatteryManager;
@protocol PICapability;
@protocol PILibraryVersionUtilApi;
@protocol PILogger;
@protocol PIMixerCallback;
@protocol PINetworkChangeCallback;
@protocol PIPushStatusChangeCallback;
@protocol PIReachability;
@protocol PIRsCallback;
@protocol PIScheduledScreenshotCallback;
@protocol PIUiTaskRunner;
@protocol PIiLiveBaseApi;

@interface PIPeerBase : NSObject < PIAction0, PIAction1, PIIjkPlayerCallback > {
 @public
  PIPeerCore *mCore_;
  PIPeerExt *mExt_;
  PIJsonConverter *mJsonConverter_;
  id<PILogger> mLogger_;
  id<PIUiTaskRunner> mUiTaskRunner_;
  PIErrorReporter *mErrorReporter_;
  id<PIAecSwitch> mAecSwitch_;
  jboolean mConfigured_;
  NSString *mMcProfile_;
}

#pragma mark Public

- (instancetype)initWithPICapability:(id<PICapability>)capability
                  withPIReachability:(id<PIReachability>)reachability
                  withPIiLiveBaseApi:(id<PIiLiveBaseApi>)pIiLiveBaseApi
         withPILibraryVersionUtilApi:(id<PILibraryVersionUtilApi>)libraryVersionUtilApi
                 withPIJsonConverter:(PIJsonConverter *)jsonConverter
                  withPIUiTaskRunner:(id<PIUiTaskRunner>)uiTaskRunner
                        withPILogger:(id<PILogger>)logger
                withPIRsCacheManager:(PIRsCacheManager *)rsCacheManager
                        withNSString:(NSString *)clientSdkVersion
                        withNSString:(NSString *)deviceId
                        withNSString:(NSString *)uid
                        withNSString:(NSString *)veName
         withPIUiMemSafePeerCallback:(PIUiMemSafePeerCallback *)uiCallback
                 withPIErrorReporter:(PIErrorReporter *)errorReporter
                withPIBatteryManager:(id<PIBatteryManager>)batteryManager;

- (jint)addSynchronousEvent:(jlong)pzvt
                       data:(NSString *)data;

- (void)broadcastEventToPlayerWithRid:(NSString *)rid
                           andContent:(NSString *)content;

- (void)broadcastEventToPlayerWithRid:(NSString *)rid
                           andContent:(NSString *)content
                           rightToSei:(jboolean)rightToSei;

- (void)call;

- (void)call:(JavaLangInteger *)param;

- (void)cancelScheduledScreenshot:(jint)id_;

- (void)cancelSynchronousEvent:(jint)eventId;

- (void)changeA50StateWithA50State:(jint)a50State
                withSelfVeA50State:(jint)selfVeA50State
                           withRid:(NSString *)rid;

- (void)changeAxModeWithAxMode:(jint)axMode
              withSelfVeAxMode:(jint)selfVeAxMode
                       withRid:(NSString *)rid;

- (void)changeBehaviorInternal:(jboolean)append
                          cmds:(id<JavaUtilList>)cmds;

- (void)changeBehaviorInternal:(jboolean)append
                          cmds:(id<JavaUtilList>)cmds
                         allVe:(jboolean)allVe
                       rsReqId:(NSString *)rsReqId;

- (void)changeBehaviorInternal:(jboolean)append
                          cmds:(id<JavaUtilList>)cmds
                     mergeInfo:(NSString *)mergeInfo
                     splitInfo:(NSString *)splitInfo;

- (void)changeBehaviorInternal:(jboolean)append
                          cmds:(id<JavaUtilList>)cmds
                     mergeInfo:(NSString *)mergeInfo
                     splitInfo:(NSString *)splitInfo
                         allVe:(jboolean)allVe
                       rsReqId:(NSString *)rsReqId;

- (void)changeExternalState:(NSString *)data;

- (void)changeRoom:(NSString *)roomId
withPlayStreamMode:(jint)playStreamMode
    withCreatorUid:(NSString *)creatorUid
           withUrl:(NSString *)url;

- (void)changeSelfExternalState:(NSString *)data;

- (void)changeToParticipatorWithRoomId:(NSString *)roomId
                          withTurnpUrl:(NSString *)turnpUrl
                        withCdnPlayUrl:(NSString *)cdnPlayUrl;

- (void)changeToViewerWithRoomId:(NSString *)roomId
              withPlayStreamMode:(jint)playStreamMode
                  withCreatorUid:(NSString *)creatorUid
                         withUrl:(NSString *)url;

- (void)changeVeWithRid:(NSString *)rid
                withUid:(NSString *)uid
          withNewVeName:(NSString *)newVeName;

- (void)changeZoomRatio:(jfloat)zoomRatio;

- (void)checkUsersWithRoomId:(NSString *)roomId
                    withUser:(id<JavaUtilList>)users
                withCallback:(id<PIRsCallback>)callback;

- (jboolean)enableVideoPush:(jboolean)enable;

- (void)forceShutdown;

- (jboolean)getAecStatus;

- (id<JavaUtilList>)getAllPeerPlayerInternal;

- (id<JavaUtilList>)getAllPlayersInternal;

- (id<JavaUtilList>)getAllPlayers2Internal;

- (id<JavaUtilMap>)getAllPlayUrlInternal:(NSString *)rid;

- (PIAudioDevice *)getAudioDevice;

- (jint)getBatteryLevel;

- (jlong)getExtraTs:(jlong)rid
            withUid:(NSString *)uid;

- (jlong)getExtraTs2:(NSString *)rid
             withUid:(NSString *)uid;

- (id<JavaUtilList>)getJoinedRoomsInternal;

- (jfloat)getMaxZoomRatio;

- (jlong)getMixerMusicProgress;

- (jlong)getPlay4GUsage;

- (PIPeerPlayer *)getPlayerInternal:(NSString *)rid
                            withUid:(NSString *)uid;

- (PIPeerPlayer *)getPlayerInternal:(NSString *)rid
                            withUid:(NSString *)uid
                         withVeName:(NSString *)veName;

- (jint)getPlayerPushTcsModeWithRid:(jlong)rid
                             andUid:(NSString *)uid;

- (jint)getPlayerPushTcsMode2WithRid:(NSString *)rid
                              andUid:(NSString *)uid;

- (id<JavaUtilList>)getPlayUrlInternalWithRid:(NSString *)rid
                                      withUid:(NSString *)uid
                                   withVeName:(NSString *)veName;

- (id<JavaUtilList>)getPslIdsInternal;

- (jlong)getPush4GUsage;

- (jint)getSlotWithRid:(jlong)rid
                andUid:(NSString *)uid;

- (jint)getSlot2WithRid:(NSString *)rid
                 andUid:(NSString *)uid;

- (PIStatisticsInternal *)getStatisticsInternal;

- (id<JavaUtilList>)getTranscoderStatusInternal;

- (NSString *)getUid;

- (id<JavaUtilList>)getUsedUserWindowsInternal;

- (jboolean)isBatteryCharging;

- (jboolean)isError:(jint)code;

- (jboolean)isLowPowerMode;

- (void)joinAsParticipatorWithRoomId:(NSString *)roomId
                        withTurnpUrl:(NSString *)turnpUrl
                      withCdnPlayUrl:(NSString *)cdnPlayUrl;

- (void)joinAsViewerWithRoomId:(NSString *)roomId
            withPlayStreamMode:(jint)playStreamMode
                withCreatorUid:(NSString *)creatorUid
                       withUrl:(NSString *)url;

- (void)kickout:(jlong)roomId
        withUid:(NSString *)uid;

- (void)kickout2:(NSString *)roomId
         withUid:(NSString *)uid
     withRsReqId:(NSString *)rsReqId;

- (void)onChangeVeName:(NSString *)roomId
               withUid:(NSString *)uid
         withOldVeName:(NSString *)oldVeName
         withNewVeName:(NSString *)newVeName;

- (void)onCoreStatusResult:(PIPlayTargetSpec *)playTarget
           withContentType:(jint)contentType
               withContent:(NSString *)content;

- (void)onIJKNeedRetry:(jint)retryReason;

- (void)onMessageInput:(NSString *)message;

- (void)onPause;

- (void)onPlayerRestart;

- (void)onReceiveAudioSuccess:(PIPlayTargetSpec *)playTarget;

- (void)onReceiveEventFromPusher:(PIPlayTargetSpec *)playTarget
                         content:(NSString *)content;

- (void)onReceiveVideoSuccess:(PIPlayTargetSpec *)playTarget;

- (void)onReReceiveSuccess;

- (void)onResume;

- (void)onResumeWithInt:(jint)audioInterrupt;

- (void)onVeChangeResult:(jint)result;

- (void)onViewChanged:(PIPlayTargetSpec *)playTarget
            newVeName:(NSString *)newVeName;

- (void)pauseMixer;

- (void)postRoomServer:(NSString *)url
                  body:(NSString *)body
              callback:(id<PIRsCallback>)callback;

- (void)prepareMusicSource:(NSString *)sourcePath;

- (void)refresh;

- (void)removePlayerManually:(jlong)roomId
                         uid:(NSString *)uid;

- (void)removePlayerManually2:(NSString *)roomId
                          uid:(NSString *)uid;

- (void)resetUid:(NSString *)uid;

- (void)resetUserWindowsInternal:(id<JavaUtilList>)windows;

- (void)resumeMixer;

- (void)runOnWorkerThreadInternal:(id<JavaLangRunnable>)task;

- (jint)scheduleScreenshot:(jlong)pzvt
                     paths:(id<JavaUtilMap>)paths
                  callback:(id<PIScheduledScreenshotCallback>)callback;

- (void)sendAppMessageWithReceiverUid:(NSString *)receiverUid
                   withReceiverVeName:(NSString *)receiverVeName
                             withData:(NSString *)data
                           withRoomId:(NSString *)roomId;

- (jint)sendEventToPusherWithRid:(NSString *)rid
                         withUid:(NSString *)uid
                      withVeName:(NSString *)veName
                        withData:(NSString *)data;

- (void)setJoinedRoomsManuallyWithInt:(jint)playStreamMode
                        withLongArray:(IOSLongArray *)rids;

- (void)setJoinedRoomsManually2WithInt:(jint)playStreamMode
                     withNSStringArray:(IOSObjectArray *)rids;

- (void)setMixerCallback:(id<PIMixerCallback>)mixerCallback;

- (void)setMixerMetronomeVolume:(jint)volume;

- (void)setMixerMusicVolumeWithLeftVolume:(jint)volumeLeft
                          withRightVolume:(jint)volumeRight;

- (void)setNetworkChangeCallback:(id<PINetworkChangeCallback>)networkChangeCallback;

- (void)setPeerHook:(PIPeerHook *)peerHook;

- (void)setProcessCallbackInterval:(jint)interval;

- (void)setPushStatusChangeCallback:(id<PIPushStatusChangeCallback>)pushStatusChangeCallback;

- (void)setUrlParamsOverrideWithPushUrlParamsOverride:(NSString *)pushUrlParamsOverride
                                 encUrlParamsOverride:(NSString *)encUrlParamsOverride
                                linkUrlParamsOverride:(NSString *)linkUrlParamsOverride;

- (void)setZoomRatio:(jfloat)zoomRatio;

- (void)startLiveWithNSString:(NSString *)roomId
                 withNSString:(NSString *)turnpUrl;

- (void)startLiveAndPKWithOriginRoom:(NSString *)originRoom
                   withNonOriginRoom:(NSString *)nonOriginRoom
                     withPrimaryRoom:(NSString *)primaryRoom
                        withTurnpUrl:(NSString *)turnpUrl;

- (void)startMixerWithMixType:(jint)mixType
                withDelayTime:(jint)delayTime
           withMixMusicConfig:(PIMixMusicConfigSpec *)mixMusicConfig
   withMetronomeChannelConfig:(PIMetronomeChannelConfigSpec *)metronomeChannelConfig;

- (void)startPKAfterLiveWithOriginRoom:(NSString *)originRoom
                     withNonOriginRoom:(NSString *)nonOriginRoom
                       withPrimaryRoom:(NSString *)primaryRoom
                          withTurnpUrl:(NSString *)turnpUrl;

- (void)startWatch:(NSString *)roomId
withPlayStreamMode:(jint)playStreamMode
    withCreatorUid:(NSString *)creatorUid
           withUrl:(NSString *)url;

- (void)stopAllStreams;

- (void)stopMixer:(jboolean)changeFunctionDate;

- (void)stopPKKeepLiveWithOriginRoom:(NSString *)originRoom
                   withNonOriginRoom:(NSString *)nonOriginRoom
                     withPrimaryRoom:(NSString *)primaryRoom;

- (void)switchCamera:(jint)face;

- (void)toggleFullscreen:(NSString *)uid;

- (void)toggleFullscreen:(NSString *)uid
               andVeName:(NSString *)veName;

- (void)toggleMixerMetronomeStreaming:(jboolean)enable;

- (void)toggleMixerMicEcho:(jboolean)enable;

- (void)toggleMixerMusicStreaming:(jboolean)enable;

- (void)toggleMute:(jboolean)isMute;

- (void)toggleMute:(jboolean)isMute
       withBitrate:(jint)bitrate;

- (void)toggleTorch:(jboolean)torchOn;

- (void)updatePushConfig:(PIPushTargetConfigSpec *)config;

#pragma mark Protected

- (void)doChangeLayoutType:(jint)layoutType
                   windows:(id<JavaUtilList>)windows
                  onFinish:(id<JavaLangRunnable>)onFinish;

- (id<JavaUtilList>)getAllPzvtDelay;

- (void)onChangeDurationWithInt:(jint)state;

- (void)onCleanUp;

- (void)preloadBeforeViewerJoinWithNSString:(NSString *)uid
                               withNSString:(NSString *)creatorUid
                               withNSString:(NSString *)roomId
                                    withInt:(jint)playStreamMode
                               withNSString:(NSString *)url;

- (void)setLayoutType:(jint)layoutType;

- (jboolean)sick:(NSString *)function;

#pragma mark Package-Private

- (void)pauseMixerSsrc:(jint)ssrc;

- (void)resumeMixerSsrc:(jint)ssrc;

- (void)setAudioInterrupt:(jboolean)audioInterrupt;

- (void)toggleAec:(jboolean)enable;

- (void)updateAecWithOpenAec:(jboolean)openAec
                withCloseAec:(jboolean)closeAec;

@end

J2OBJC_EMPTY_STATIC_INIT(PIPeerBase)

J2OBJC_FIELD_SETTER(PIPeerBase, mCore_, PIPeerCore *)
J2OBJC_FIELD_SETTER(PIPeerBase, mExt_, PIPeerExt *)
J2OBJC_FIELD_SETTER(PIPeerBase, mJsonConverter_, PIJsonConverter *)
J2OBJC_FIELD_SETTER(PIPeerBase, mLogger_, id<PILogger>)
J2OBJC_FIELD_SETTER(PIPeerBase, mUiTaskRunner_, id<PIUiTaskRunner>)
J2OBJC_FIELD_SETTER(PIPeerBase, mErrorReporter_, PIErrorReporter *)
J2OBJC_FIELD_SETTER(PIPeerBase, mAecSwitch_, id<PIAecSwitch>)
J2OBJC_FIELD_SETTER(PIPeerBase, mMcProfile_, NSString *)

inline NSString *PIPeerBase_get_TAG(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *PIPeerBase_TAG;
J2OBJC_STATIC_FIELD_OBJ_FINAL(PIPeerBase, TAG, NSString *)

inline jboolean PIPeerBase_get_sHasRunningPeer(void);
inline jboolean PIPeerBase_set_sHasRunningPeer(jboolean value);
inline jboolean *PIPeerBase_getRef_sHasRunningPeer(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jboolean PIPeerBase_sHasRunningPeer;
J2OBJC_STATIC_FIELD_PRIMITIVE(PIPeerBase, sHasRunningPeer, jboolean)

FOUNDATION_EXPORT void PIPeerBase_initWithPICapability_withPIReachability_withPIiLiveBaseApi_withPILibraryVersionUtilApi_withPIJsonConverter_withPIUiTaskRunner_withPILogger_withPIRsCacheManager_withNSString_withNSString_withNSString_withNSString_withPIUiMemSafePeerCallback_withPIErrorReporter_withPIBatteryManager_(PIPeerBase *self, id<PICapability> capability, id<PIReachability> reachability, id<PIiLiveBaseApi> pIiLiveBaseApi, id<PILibraryVersionUtilApi> libraryVersionUtilApi, PIJsonConverter *jsonConverter, id<PIUiTaskRunner> uiTaskRunner, id<PILogger> logger, PIRsCacheManager *rsCacheManager, NSString *clientSdkVersion, NSString *deviceId, NSString *uid, NSString *veName, PIUiMemSafePeerCallback *uiCallback, PIErrorReporter *errorReporter, id<PIBatteryManager> batteryManager);

J2OBJC_TYPE_LITERAL_HEADER(PIPeerBase)

@compatibility_alias ComPowerinfoPi_iroomCorePeerBase PIPeerBase;

#endif

#pragma pop_macro("INCLUDE_ALL_PeerBase")
