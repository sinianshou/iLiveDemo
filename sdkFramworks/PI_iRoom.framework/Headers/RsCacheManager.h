//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:libs/XiRoom-sources.jar!com/powerinfo/pi_iroom/core/RsCacheManager.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RsCacheManager")
#ifdef RESTRICT_RsCacheManager
#define INCLUDE_ALL_RsCacheManager 0
#else
#define INCLUDE_ALL_RsCacheManager 1
#endif
#undef RESTRICT_RsCacheManager

#if !defined (PIRsCacheManager_) && (INCLUDE_ALL_RsCacheManager || defined(INCLUDE_PIRsCacheManager))
#define PIRsCacheManager_

@class PIChangeRefreshRequestSpec;
@class PIChangeRefreshResultSpec;
@class PIJsonConverter;
@protocol JavaUtilList;
@protocol PIHttpDnsApi;
@protocol PILogger;
@protocol PIiLiveBaseApi;

@interface PIRsCacheManager : NSObject

#pragma mark Public

- (instancetype)initWithPIiLiveBase:(id<PIiLiveBaseApi>)pIiLiveBaseApi
                     withHttpDnsApi:(id<PIHttpDnsApi>)httpDnsApi
                  withJsonConverter:(PIJsonConverter *)jsonConverter
                         withLogger:(id<PILogger>)logger
                       withDeviceId:(NSString *)deviceId
               withClientSdkVersion:(NSString *)clientSdkVersion;

- (void)preloadWithNdSelect:(jint)ndSelect
                    groupId:(NSString *)groupId
                    request:(PIChangeRefreshRequestSpec *)request
                     result:(PIChangeRefreshResultSpec *)result
                skipOnExist:(jboolean)skipOnExist;

- (void)preloadWithNdSelect:(jint)ndSelect
                    groupId:(NSString *)groupId
                        uid:(NSString *)uid
                       cmds:(id<JavaUtilList>)cmds;

- (void)setCapacity:(jint)capacity;

- (void)setTTL:(jlong)ttl;

#pragma mark Package-Private

- (NSString *)callRoomServerWithInt:(jint)ndSelect
                       withNSString:(NSString *)groupId
                       withNSString:(NSString *)url
                       withNSString:(NSString *)header
                             withId:(id)requestBody
                            withInt:(jint)timeoutMs
                        withBoolean:(jboolean)disableCache;

- (jboolean)resolveResultWithPIChangeRefreshResultSpec:(PIChangeRefreshResultSpec *)result;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(PIRsCacheManager)

FOUNDATION_EXPORT void PIRsCacheManager_initWithPIiLiveBase_withHttpDnsApi_withJsonConverter_withLogger_withDeviceId_withClientSdkVersion_(PIRsCacheManager *self, id<PIiLiveBaseApi> pIiLiveBaseApi, id<PIHttpDnsApi> httpDnsApi, PIJsonConverter *jsonConverter, id<PILogger> logger, NSString *deviceId, NSString *clientSdkVersion);

FOUNDATION_EXPORT PIRsCacheManager *new_PIRsCacheManager_initWithPIiLiveBase_withHttpDnsApi_withJsonConverter_withLogger_withDeviceId_withClientSdkVersion_(id<PIiLiveBaseApi> pIiLiveBaseApi, id<PIHttpDnsApi> httpDnsApi, PIJsonConverter *jsonConverter, id<PILogger> logger, NSString *deviceId, NSString *clientSdkVersion) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT PIRsCacheManager *create_PIRsCacheManager_initWithPIiLiveBase_withHttpDnsApi_withJsonConverter_withLogger_withDeviceId_withClientSdkVersion_(id<PIiLiveBaseApi> pIiLiveBaseApi, id<PIHttpDnsApi> httpDnsApi, PIJsonConverter *jsonConverter, id<PILogger> logger, NSString *deviceId, NSString *clientSdkVersion);

J2OBJC_TYPE_LITERAL_HEADER(PIRsCacheManager)

@compatibility_alias ComPowerinfoPi_iroomCoreRsCacheManager PIRsCacheManager;

#endif

#if !defined (PIRsCacheManager_CacheKey_) && (INCLUDE_ALL_RsCacheManager || defined(INCLUDE_PIRsCacheManager_CacheKey))
#define PIRsCacheManager_CacheKey_

@protocol JavaUtilList;

@interface PIRsCacheManager_CacheKey : NSObject {
 @public
  jint ndSelect_;
  NSString *groupId_;
  jboolean append_;
  id<JavaUtilList> rooms_;
}

#pragma mark Public

- (jboolean)isEqual:(id)o;

- (NSUInteger)hash;

#pragma mark Package-Private

- (instancetype)initWithInt:(jint)ndSelect
               withNSString:(NSString *)groupId
                withBoolean:(jboolean)append
           withJavaUtilList:(id<JavaUtilList>)rooms;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(PIRsCacheManager_CacheKey)

J2OBJC_FIELD_SETTER(PIRsCacheManager_CacheKey, groupId_, NSString *)
J2OBJC_FIELD_SETTER(PIRsCacheManager_CacheKey, rooms_, id<JavaUtilList>)

FOUNDATION_EXPORT void PIRsCacheManager_CacheKey_initWithInt_withNSString_withBoolean_withJavaUtilList_(PIRsCacheManager_CacheKey *self, jint ndSelect, NSString *groupId, jboolean append, id<JavaUtilList> rooms);

FOUNDATION_EXPORT PIRsCacheManager_CacheKey *new_PIRsCacheManager_CacheKey_initWithInt_withNSString_withBoolean_withJavaUtilList_(jint ndSelect, NSString *groupId, jboolean append, id<JavaUtilList> rooms) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT PIRsCacheManager_CacheKey *create_PIRsCacheManager_CacheKey_initWithInt_withNSString_withBoolean_withJavaUtilList_(jint ndSelect, NSString *groupId, jboolean append, id<JavaUtilList> rooms);

J2OBJC_TYPE_LITERAL_HEADER(PIRsCacheManager_CacheKey)

#endif

#if !defined (PIRsCacheManager_CacheValue_) && (INCLUDE_ALL_RsCacheManager || defined(INCLUDE_PIRsCacheManager_CacheValue))
#define PIRsCacheManager_CacheValue_

@interface PIRsCacheManager_CacheValue : NSObject {
 @public
  NSString *value_;
  jlong ts_;
}

#pragma mark Package-Private

- (instancetype)initWithNSString:(NSString *)value
                        withLong:(jlong)ts;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(PIRsCacheManager_CacheValue)

J2OBJC_FIELD_SETTER(PIRsCacheManager_CacheValue, value_, NSString *)

FOUNDATION_EXPORT void PIRsCacheManager_CacheValue_initWithNSString_withLong_(PIRsCacheManager_CacheValue *self, NSString *value, jlong ts);

FOUNDATION_EXPORT PIRsCacheManager_CacheValue *new_PIRsCacheManager_CacheValue_initWithNSString_withLong_(NSString *value, jlong ts) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT PIRsCacheManager_CacheValue *create_PIRsCacheManager_CacheValue_initWithNSString_withLong_(NSString *value, jlong ts);

J2OBJC_TYPE_LITERAL_HEADER(PIRsCacheManager_CacheValue)

#endif

#if !defined (PIRsCacheManager_Cache_) && (INCLUDE_ALL_RsCacheManager || defined(INCLUDE_PIRsCacheManager_Cache))
#define PIRsCacheManager_Cache_

@class PIRsCacheManager_CacheKey;
@class PISparseArrayCompat;
@protocol PIFunction1;

@interface PIRsCacheManager_Cache : NSObject {
 @public
  PISparseArrayCompat *mCache_;
  jlong mLastInvalidateTs_;
  jlong mTTL_;
  id<PIFunction1> mCacheExpired_;
  jint mMaxSize_;
}

#pragma mark Package-Private

- (instancetype)initWithLong:(jlong)ttl
                     withInt:(jint)maxSize;

- (NSString *)getWithPIRsCacheManager_CacheKey:(PIRsCacheManager_CacheKey *)key;

- (void)invalidate;

- (void)putWithPIRsCacheManager_CacheKey:(PIRsCacheManager_CacheKey *)key
                            withNSString:(NSString *)value;

- (void)setCapacityWithInt:(jint)capacity;

- (void)setTTLWithLong:(jlong)ttl;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(PIRsCacheManager_Cache)

J2OBJC_FIELD_SETTER(PIRsCacheManager_Cache, mCache_, PISparseArrayCompat *)
J2OBJC_FIELD_SETTER(PIRsCacheManager_Cache, mCacheExpired_, id<PIFunction1>)

FOUNDATION_EXPORT void PIRsCacheManager_Cache_initWithLong_withInt_(PIRsCacheManager_Cache *self, jlong ttl, jint maxSize);

FOUNDATION_EXPORT PIRsCacheManager_Cache *new_PIRsCacheManager_Cache_initWithLong_withInt_(jlong ttl, jint maxSize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT PIRsCacheManager_Cache *create_PIRsCacheManager_Cache_initWithLong_withInt_(jlong ttl, jint maxSize);

J2OBJC_TYPE_LITERAL_HEADER(PIRsCacheManager_Cache)

#endif

#pragma pop_macro("INCLUDE_ALL_RsCacheManager")
