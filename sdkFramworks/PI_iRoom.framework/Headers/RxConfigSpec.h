//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:libs/XiRoom-sources.jar!com/powerinfo/pi_iroom/data/RxConfigSpec.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxConfigSpec")
#ifdef RESTRICT_RxConfigSpec
#define INCLUDE_ALL_RxConfigSpec 0
#else
#define INCLUDE_ALL_RxConfigSpec 1
#endif
#undef RESTRICT_RxConfigSpec

#if !defined (PIRxConfigSpec_) && (INCLUDE_ALL_RxConfigSpec || defined(INCLUDE_PIRxConfigSpec))
#define PIRxConfigSpec_

@class ComGoogleGsonGson;
@class ComGoogleGsonTypeAdapter;
@class PIRxConfigSpec_Builder;

@interface PIRxConfigSpec : NSObject

#pragma mark Public

- (instancetype)init;

- (jlong)a50_inactive_threshold;

- (jint)a50_refresh_interval;

- (jint)a50_state_check_interval;

+ (PIRxConfigSpec_Builder *)builder;

+ (PIRxConfigSpec *)createRxConfigSpecWithRefresh:(jint)refresh
                                           withHb:(jint)hb
                                 withFsBcInterval:(jint)fs_bc_interval
                             withFsBcSelfInterval:(jint)fs_bc_self_interval
                           withA50RefreshInterval:(jint)a50_refresh_interval
                        withA50StateCheckInterval:(jint)a50_state_check_interval
                           withVeSyncPlayInterval:(jint)ve_sync_play_interval
                                    withHbTimeout:(jint)hbTimeout
                                    withRxTimeout:(jint)rxTimeout
                                      withRxRetry:(jint)rxRetry
                         withA50InactiveThreshold:(jlong)a50_inactive_threshold;

- (jint)fs_bc_interval;

- (jint)fs_bc_self_interval;

- (jint)hb;

- (jint)hb_timeout;

- (jboolean)play_one_auto_ve_change;

- (jint)refresh;

- (jint)rx_retry;

- (jint)rx_timeout;

+ (ComGoogleGsonTypeAdapter *)typeAdapterWithComGoogleGsonGson:(ComGoogleGsonGson *)gson;

- (jint)ve_sync_play_interval;

@end

J2OBJC_EMPTY_STATIC_INIT(PIRxConfigSpec)

FOUNDATION_EXPORT void PIRxConfigSpec_init(PIRxConfigSpec *self);

FOUNDATION_EXPORT ComGoogleGsonTypeAdapter *PIRxConfigSpec_typeAdapterWithComGoogleGsonGson_(ComGoogleGsonGson *gson);

FOUNDATION_EXPORT PIRxConfigSpec_Builder *PIRxConfigSpec_builder(void);

FOUNDATION_EXPORT PIRxConfigSpec *PIRxConfigSpec_createRxConfigSpecWithRefresh_withHb_withFsBcInterval_withFsBcSelfInterval_withA50RefreshInterval_withA50StateCheckInterval_withVeSyncPlayInterval_withHbTimeout_withRxTimeout_withRxRetry_withA50InactiveThreshold_(jint refresh, jint hb, jint fs_bc_interval, jint fs_bc_self_interval, jint a50_refresh_interval, jint a50_state_check_interval, jint ve_sync_play_interval, jint hbTimeout, jint rxTimeout, jint rxRetry, jlong a50_inactive_threshold);

J2OBJC_TYPE_LITERAL_HEADER(PIRxConfigSpec)

@compatibility_alias ComPowerinfoPi_iroomDataRxConfigSpec PIRxConfigSpec;

#endif

#if !defined (PIRxConfigSpec_Builder_) && (INCLUDE_ALL_RxConfigSpec || defined(INCLUDE_PIRxConfigSpec_Builder))
#define PIRxConfigSpec_Builder_

@class PIRxConfigSpec;

@interface PIRxConfigSpec_Builder : NSObject

#pragma mark Public

- (instancetype)init;

- (PIRxConfigSpec_Builder *)a50_inactive_threshold:(jlong)a50_inactive_threshold;

- (PIRxConfigSpec_Builder *)a50_refresh_interval:(jint)a50_refresh_interval;

- (PIRxConfigSpec_Builder *)a50_state_check_interval:(jint)a50_state_check_interval;

- (PIRxConfigSpec *)build;

- (PIRxConfigSpec_Builder *)fs_bc_interval:(jint)fs_bc_interval;

- (PIRxConfigSpec_Builder *)fs_bc_self_interval:(jint)fs_bc_self_interval;

- (PIRxConfigSpec_Builder *)hb:(jint)hb;

- (PIRxConfigSpec_Builder *)hb_timeout:(jint)hb_timeout;

- (PIRxConfigSpec_Builder *)play_one_auto_ve_change:(jboolean)play_one_auto_ve_change;

- (PIRxConfigSpec_Builder *)refresh:(jint)refresh;

- (PIRxConfigSpec_Builder *)rx_retry:(jint)rx_retry;

- (PIRxConfigSpec_Builder *)rx_timeout:(jint)rx_timeout;

- (PIRxConfigSpec_Builder *)ve_sync_play_interval:(jint)ve_sync_play_interval;

@end

J2OBJC_EMPTY_STATIC_INIT(PIRxConfigSpec_Builder)

FOUNDATION_EXPORT void PIRxConfigSpec_Builder_init(PIRxConfigSpec_Builder *self);

J2OBJC_TYPE_LITERAL_HEADER(PIRxConfigSpec_Builder)

#endif

#pragma pop_macro("INCLUDE_ALL_RxConfigSpec")
