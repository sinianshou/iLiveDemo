//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:libs/XiRoom-sources.jar!com/powerinfo/pi_iroom/data/SplitInfoSpec.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_SplitInfoSpec")
#ifdef RESTRICT_SplitInfoSpec
#define INCLUDE_ALL_SplitInfoSpec 0
#else
#define INCLUDE_ALL_SplitInfoSpec 1
#endif
#undef RESTRICT_SplitInfoSpec

#if !defined (PISplitInfoSpec_) && (INCLUDE_ALL_SplitInfoSpec || defined(INCLUDE_PISplitInfoSpec))
#define PISplitInfoSpec_

@class ComGoogleGsonGson;
@class ComGoogleGsonTypeAdapter;
@class JavaUtilArrayList;
@protocol JavaUtilList;

@interface PISplitInfoSpec : NSObject

#pragma mark Public

- (instancetype)init;

+ (PISplitInfoSpec *)createWithLong:(jlong)old_primary_room
              withJavaUtilArrayList:(JavaUtilArrayList *)split;

+ (PISplitInfoSpec *)createSplitInfoSpecWithOldPrimaryRoom:(NSString *)old_primary_room
                                                 withSplit:(JavaUtilArrayList *)split;

+ (PISplitInfoSpec *)getDiscreteSplitInfo:(jlong)primaryRoom
                                  roomIds:(id<JavaUtilList>)rids;

+ (PISplitInfoSpec *)getDiscreteSplitInfo2:(NSString *)primaryRoom
                                   roomIds:(id<JavaUtilList>)rids;

- (NSString *)old_primary_sroom;

- (JavaUtilArrayList *)split;

+ (ComGoogleGsonTypeAdapter *)typeAdapterWithComGoogleGsonGson:(ComGoogleGsonGson *)gson;

@end

J2OBJC_EMPTY_STATIC_INIT(PISplitInfoSpec)

FOUNDATION_EXPORT void PISplitInfoSpec_init(PISplitInfoSpec *self);

FOUNDATION_EXPORT ComGoogleGsonTypeAdapter *PISplitInfoSpec_typeAdapterWithComGoogleGsonGson_(ComGoogleGsonGson *gson);

FOUNDATION_EXPORT PISplitInfoSpec *PISplitInfoSpec_createWithLong_withJavaUtilArrayList_(jlong old_primary_room, JavaUtilArrayList *split);

FOUNDATION_EXPORT PISplitInfoSpec *PISplitInfoSpec_createSplitInfoSpecWithOldPrimaryRoom_withSplit_(NSString *old_primary_room, JavaUtilArrayList *split);

FOUNDATION_EXPORT PISplitInfoSpec *PISplitInfoSpec_getDiscreteSplitInfo_roomIds_(jlong primaryRoom, id<JavaUtilList> rids);

FOUNDATION_EXPORT PISplitInfoSpec *PISplitInfoSpec_getDiscreteSplitInfo2_roomIds_(NSString *primaryRoom, id<JavaUtilList> rids);

J2OBJC_TYPE_LITERAL_HEADER(PISplitInfoSpec)

@compatibility_alias ComPowerinfoPi_iroomDataSplitInfoSpec PISplitInfoSpec;

#endif

#pragma pop_macro("INCLUDE_ALL_SplitInfoSpec")
